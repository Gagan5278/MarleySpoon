//
//  RecipeListProtocols.swift
//  MarleySpoon
//
//  Created Gagan Vishal on 2020/01/25.
//  Copyright Â© 2020 Gagan Vishal. All rights reserved.
//
//  Template generated by Gagan Vishal @gagan5278
//

import Foundation
import UIKit

//MARK: Wireframe -
protocol RecipeListWireframeProtocol: class {
    ///alert message
    func showAlert(with title: String, message: String, view:RecipeListViewProtocol, buttonTitle: String, withCallback callBack :((UIAlertAction) -> Void)? )
    //Push
    func pushToViewController(view: RecipeListViewProtocol, model: RecipeModel)
}
//MARK: Presenter -
protocol RecipeListPresenterProtocol: class {

    var interactor: RecipeListInteractorInputProtocol? { get set }
    func fetchRecipeList()
    /// display alert message
    func showAlert(with title: String, message: String, view:RecipeListViewProtocol, with buttonTitle: String, withCallback callBack :((UIAlertAction) -> Void)?)
    //Push to detailview
    func pushToDetailViewController(view: RecipeListViewProtocol, model: RecipeModel)
}

//MARK: Interactor -
protocol RecipeListInteractorOutputProtocol: class {
    /* Interactor -> Presenter */
    func onRecieveServer(error: APIError)
    func onRecieveRecipe(items: [RecipeModel])
}

protocol RecipeListInteractorInputProtocol: class {
    var presenter: RecipeListInteractorOutputProtocol?  { get set }
    var remoteDataManager: RecipeRemoteDataManagerInputProtocol? {get set}
    /* Presenter -> Interactor */
    func fetchRecipeListFromServer()
}

//MARK:- Remote Data Manager
protocol RecipeRemoteDataManagerInputProtocol {
    var remoteRequestHandler: RecipeRemoteDataManagerOutputProtocol? {get set}
    /* Interactor -> RemoteDataManager */
    func retrieveRecipeList()
}

protocol RecipeRemoteDataManagerOutputProtocol {
    func onRecieveRecipe(item: [RecipeModel])
    func onRecieve(error: APIError)
}

//MARK: View -
protocol RecipeListViewProtocol: class {
    var presenter: RecipeListPresenterProtocol?  { get set }
    /* Presenter -> ViewController */
    func didFinishLoading()
    func didStartLoading()
    func didFetchRecipe(item: [RecipeModel])
    func didRecieve(error: APIError)
}
