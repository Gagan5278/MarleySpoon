//
//  RecipeListRouter.swift
//  MarleySpoon
//
//  Created Gagan Vishal on 2020/01/25.
//  Copyright Â© 2020 Gagan Vishal. All rights reserved.
//
//  Template generated by Gagan Vishal @gagan5278
//

import UIKit

class RecipeListRouter: RecipeListWireframeProtocol {
    
    weak var viewController: UIViewController?
    
    static func createRecipeListModule() -> UIViewController? {
        if let view = UIStoryboard(name: "RecipeList", bundle: .main).instantiateViewController(identifier: "RecipeListView") as? RecipeListViewController {
            let interactor: RecipeListInteractorInputProtocol & RecipeRemoteDataManagerOutputProtocol = RecipeListInteractor()
            let remoteDataManager  = RemoteDataManager()
            interactor.remoteDataManager = remoteDataManager
            remoteDataManager.remoteRequestHandler = interactor
            let router = RecipeListRouter()
            let presenter = RecipeListPresenter(interface: view, interactor: interactor, router: router)
            view.presenter = presenter
            interactor.presenter = presenter
            router.viewController = view
            return view
        }
        return nil
    }
    
    //MARK:- Alert message
    func showAlert(with title: String, message: String, view: RecipeListViewProtocol, buttonTitle: String, withCallback callBack: ((UIAlertAction) -> Void)?) {
        if let viewController = view as? UIViewController {
            CustomAlertController.showUserAlert(with: title, message: message, buttonTitle: buttonTitle, onViewController: viewController, withCallback: callBack)
        }
    }
    
    func pushToViewController(view: RecipeListViewProtocol, model: RecipeModel) {
        //1. Get Detail View Controller
        let detailViewController = RecipeDetailRouter.createDetailModule(with: model)
        //2. Push to detailView Controller
        if let viewController = view as? UIViewController {
            viewController.navigationController?.pushViewController(detailViewController, animated: true)
        }
    }
}
