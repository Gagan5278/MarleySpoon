//
//  RecipeDetailViewController.swift
//  MarleySpoon
//
//  Created Gagan Vishal on 2020/01/24.
//  Copyright Â© 2020 Gagan Vishal. All rights reserved.
//
//  Template generated by Gagan Vishal @gagan5278
//

import UIKit

class RecipeDetailViewController: UIViewController {
    ///Image Loader indicator
    let activityIndicator: UIActivityIndicatorView = {
        let indicator = UIActivityIndicatorView(style: .medium)
        indicator.color = .blue
        indicator.startAnimating()
        indicator.hidesWhenStopped = true
        indicator.translatesAutoresizingMaskIntoConstraints = false
        return indicator
    }()
    
    let detailImageView: DetailImageView = {
        let imageView = DetailImageView(frame: .zero)
        imageView.isUserInteractionEnabled = true
        imageView.translatesAutoresizingMaskIntoConstraints = false
        return imageView
    }()
    
    let detailTextView: UITextView = {
        let textView = UITextView()
        textView.translatesAutoresizingMaskIntoConstraints = false
        textView.isEditable = false
        textView.textAlignment = .justified
        textView.isUserInteractionEnabled = true
        textView.dataDetectorTypes = .link
        textView.isSelectable = true
        return textView
    }()
    
    ///RecipeDetailPresenterProtocol
	var presenter: RecipeDetailPresenterProtocol?
    //MARK:- View Controller life cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        //1.
        self.title = "Recipe Detail"
        //2.add subview
        self.setupSubViews()
        //3.
        if Reachability.shared.isConnected {
            presenter?.viewLoaded()
        }
        else {
            self.presenter?.showAlert(with: Constants.Internet_Availibility.networkErrorTitle, message: Constants.Internet_Availibility.netowrkErrorMessage, view: self, buttonTitle: "OK", withCallback: self.popViewController(action:))
        }
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
    }
    
    //MARK:- Pop to previous controller
    fileprivate func popViewController(action: UIAlertAction) {
        self.navigationController?.popViewController(animated: true)
    }
    
    //MARK:- Add subviews on View
    fileprivate func setupSubViews() {
        //1.
        self.view.addSubview(detailImageView)
         NSLayoutConstraint.activate([
            self.detailImageView.leadingAnchor.constraint(equalTo: self.view.leadingAnchor),
            self.detailImageView.trailingAnchor.constraint(equalTo: self.view.trailingAnchor),
            self.detailImageView.topAnchor.constraint(equalTo: self.view.topAnchor),
            self.detailImageView.heightAnchor.constraint(equalTo: self.view.heightAnchor, multiplier: 0.33)
        ])
        //2.
        self.view.addSubview(activityIndicator)
        NSLayoutConstraint.activate([
            self.activityIndicator.centerXAnchor.constraint(equalTo: self.detailImageView.centerXAnchor),
            self.activityIndicator.centerYAnchor.constraint(equalTo: self.detailImageView.centerYAnchor)
        ])
        //3.
        self.view.addSubview(detailTextView)
        NSLayoutConstraint.activate([
            self.detailTextView.leadingAnchor.constraint(equalTo: self.view.leadingAnchor),
            self.detailTextView.trailingAnchor.constraint(equalTo: self.view.trailingAnchor),
            self.detailTextView.topAnchor.constraint(equalTo: self.detailImageView.bottomAnchor, constant: 10.0),
            self.detailTextView.bottomAnchor.constraint(equalTo: self.view.bottomAnchor)
        ])
    }
}

extension RecipeDetailViewController: RecipeDetailViewProtocol {
    
    func didLoadDetail(from text: NSAttributedString) {
        self.detailTextView.attributedText = text
    }
    
    func didLoad(image: UIImage?) {
        //1.
        activityIndicator.stopAnimating()
        //2.
        if let _ =  image {
            self.detailImageView.image = image
        }
    }
}
